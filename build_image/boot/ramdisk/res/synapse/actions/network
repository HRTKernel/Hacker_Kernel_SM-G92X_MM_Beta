# By UpInTheAir for SkyHigh SM-N915S kernels

BB=/system/xbin/busybox;

case $1 in
tcp_security)
  $BB mount -t rootfs -o remount,rw rootfs;
  P=/data/media/0/hackerkernel/values/tcp_security
  if [ ! -z $2 ]; then
  if [ $2 == Disabled ]; then
    echo 0 > $P
    	echo 128 > /proc/sys/net/ipv4/tcp_max_syn_backlog
    	echo 6 > /proc/sys/net/ipv4/tcp_syn_retries
    	echo 5 > /proc/sys/net/ipv4/tcp_synack_retries
    	echo 4096 > /proc/sys/net/ipv4/tcp_max_tw_buckets
    	echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_all
    	echo 0 > /proc/sys/net/ipv4/tcp_no_metrics_save
    	echo 60 > /proc/sys/net/ipv4/tcp_fin_timeout
    	echo 75 > /proc/sys/net/ipv4/tcp_keepalive_intvl
   	echo 9 > /proc/sys/net/ipv4/tcp_keepalive_probes
    	echo 7200 > /proc/sys/net/ipv4/tcp_keepalive_time
    	echo 1 > /proc/sys/net/ipv4/conf/all/send_redirects
    	echo 1 > /proc/sys/net/ipv4/conf/default/send_redirects
    	echo 0 > /proc/sys/net/ipv4/conf/all/rp_filter
    	echo 0 > /proc/sys/net/ipv4/conf/default/rp_filter
    	echo 1 > /proc/sys/net/ipv4/conf/default/accept_source_route
    	echo 1 > /proc/sys/net/ipv4/conf/all/accept_redirects
    	echo 1 > /proc/sys/net/ipv4/conf/default/accept_redirects
    	echo 1 > /proc/sys/net/ipv4/conf/all/secure_redirects
    	echo 1 > /proc/sys/net/ipv4/conf/default/secure_redirects
  elif [ $2 == Enabled ]; then
    echo 1 > $P
	echo 1024 > /proc/sys/net/ipv4/tcp_max_syn_backlog
	echo 2 > /proc/sys/net/ipv4/tcp_syn_retries
	echo 2 > /proc/sys/net/ipv4/tcp_synack_retries
	echo 16384 > /proc/sys/net/ipv4/tcp_max_tw_buckets
	echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all
	echo 1 > /proc/sys/net/ipv4/tcp_no_metrics_save
	echo 15 > /proc/sys/net/ipv4/tcp_fin_timeout
	echo 30 > /proc/sys/net/ipv4/tcp_keepalive_intvl
	echo 5 > /proc/sys/net/ipv4/tcp_keepalive_probes
	echo 1800 > /proc/sys/net/ipv4/tcp_keepalive_time
	echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects
	echo 0 > /proc/sys/net/ipv4/conf/default/send_redirects
	echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
	echo 1 > /proc/sys/net/ipv4/conf/default/rp_filter
	echo 0 > /proc/sys/net/ipv4/conf/default/accept_source_route
	echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects
	echo 0 > /proc/sys/net/ipv4/conf/default/accept_redirects
	echo 0 > /proc/sys/net/ipv4/conf/all/secure_redirects
	echo 0 > /proc/sys/net/ipv4/conf/default/secure_redirects
  fi; fi
  copy=`cat $P`
  if [ $copy == 0 ]; then
    echo Disabled
  elif [ $copy == 1 ]; then
    echo Enabled
  fi
  ;;
dns)
  $BB mount -t rootfs -o remount,rw rootfs;
  P=/data/media/0/hackerkernel/values/dns
  if [ ! -z $2 ]; then
  if [ $2 == Disabled ]; then
    echo 0 > $P
	setprop net.rmnet0.dns1 0.0.0.0
	setprop net.rmnet0.dns2 0.0.0.0
  elif [ $2 == Google ]; then
    echo 1 > $P
	setprop net.rmnet0.dns1 8.8.8.8
	setprop net.rmnet0.dns2 8.8.8.4
  elif [ $2 == OpenDNS ]; then
    echo 2 > $P
	setprop net.rmnet0.dns1 208.67.222.222
	setprop net.rmnet0.dns2 208.67.220.220
  elif [ $2 == Comodo ]; then
    echo 3 > $P
	setprop net.rmnet0.dns1 8.26.56.26
	setprop net.rmnet0.dns2 8.20.247.20
  elif [ $2 == Level3 ]; then
    echo 4 > $P
	setprop net.rmnet0.dns1 4.2.2.1
	setprop net.rmnet0.dns2 4.2.2.2
  elif [ $2 == Norton_DNS ]; then
    echo 5 > $P
	setprop net.rmnet0.dns1 198.153.192.1
	setprop net.rmnet0.dns2 198.153.194.1
  elif [ $2 == Smart_Viper ]; then
    echo 6 > $P
	setprop net.rmnet0.dns1 208.76.50.50
	setprop net.rmnet0.dns2 208.76.51.51
  fi; fi
  copy=`cat $P`
  if [ $copy == 0 ]; then
    echo Disabled
  elif [ $copy == 1 ]; then
    echo Google
  elif [ $copy == 2 ]; then
    echo OpenDNS
  elif [ $copy == 3 ]; then
    echo Comodo
  elif [ $copy == 4 ]; then
    echo Level3
  elif [ $copy == 5 ]; then
    echo Norton_DNS
  elif [ $copy == 6 ]; then
    echo Smart_Viper
  fi
  ;;
wifi_passwords)
  $BB mount -t rootfs -o remount,rw rootfs;
  P=/data/media/0/hackerkernel/wifi.txt
  cat /data/misc/wifi/wpa_supplicant.conf > $P
  sleep 1
  echo WiFi Passwords saved
  ;;
wifi_passwords_restore)
   if [ -f /data/media/0/hackerkernel/wifi.txt ]; then
	P=/data/misc/wifi/wpa_supplicant.conf
	svc wifi disable 2> /dev/null;
	rm -f /data/misc/dhcp/dhcpcd*;
	cat /data/media/0/hackerkernel/wifi.txt > $P
	$BB chmod 660 $P;
	svc wifi enable 2> /dev/null;
	sleep 1
	echo "WiFi Passwords Restored. Please Reboot!";
  else
	echo "No backup file found";
  fi
  ;;
esac
